// ["call" "Main.fibonacci" "1"]
@Main.fibonacci$ret.0
D=A
@returnAddress
M=D
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=A
@0
D=D+A
@1
M=D
@SP
D=A
@2
D=D+A
@3
M=D
@SP
D=A
@3
D=D+A
@4
M=D
@SP
D=A
@6
D=D-A
@2
M=D
@1
D=M
@0
D=D+A
@1
M=0
A=A+1
@Main.fibonacci
0:JMP
(Main.fibonacci$ret.0)
// ["function" "Main.fibonacci" "0"]

// ["push" "argument" "0"]
@2
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
// ["push" "constant" "2"]
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// ["lt"]
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
D=M-D
@TRUE_vlXMpPXvH2a8dPC8rNHJx
D;JLT
@FALSE_eUaP74xRzKZ5HyvX3Nyax
0;JMP
(TRUE_vlXMpPXvH2a8dPC8rNHJx)
D=-1
@SP
A=M
M=D
@NEXT_WxoHJABwKBVT3PWr5qLt8
0;JMP
(FALSE_eUaP74xRzKZ5HyvX3Nyax)
D=0
@SP
A=M
M=D
(NEXT_WxoHJABwKBVT3PWr5qLt8)
@SP
M=M+1
// ["if-goto" "IF_TRUE"]
@SP
M=M-1
@SP
A=M
D=M
@IF_TRUE
D;JNE
// ["goto" "IF_FALSE"]
@IF_FALSE
0;JMP
// ["label" "IF_TRUE"]
(IF_TRUE)
// ["push" "argument" "0"]
@2
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
// ["return"]

// ["label" "IF_FALSE"]
(IF_FALSE)
// ["push" "argument" "0"]
@2
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
// ["push" "constant" "2"]
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// ["sub"]
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
M=D
@SP
M=M+1
// ["call" "Main.fibonacci" "1"]
@null$ret.-1
D=A
@returnAddress
M=D
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=A
@0
D=D+A
@1
M=D
@SP
D=A
@2
D=D+A
@3
M=D
@SP
D=A
@3
D=D+A
@4
M=D
@SP
D=A
@6
D=D-A
@2
M=D
@1
D=M
@0
D=D+A
@1
M=0
A=A+1
@Main.fibonacci
0:JMP
(null$ret.-1)
// ["push" "argument" "0"]
@2
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
// ["push" "constant" "1"]
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// ["sub"]
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
M=D
@SP
M=M+1
// ["call" "Main.fibonacci" "1"]
@Main.fibonacci$ret.0
D=A
@returnAddress
M=D
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=A
@0
D=D+A
@1
M=D
@SP
D=A
@2
D=D+A
@3
M=D
@SP
D=A
@3
D=D+A
@4
M=D
@SP
D=A
@6
D=D-A
@2
M=D
@1
D=M
@0
D=D+A
@1
M=0
A=A+1
@Main.fibonacci
0:JMP
(Main.fibonacci$ret.0)
// ["add"]
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
M=D
@SP
M=M+1
// ["return"]

(END_LOOP_5ABp79Wxc7-UP4j7j0hBx)
@END_LOOP_5ABp79Wxc7-UP4j7j0hBx
0;JMP