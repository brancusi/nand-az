// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    
    // Dmux the input signal and send to the correct register
    DMux8Way(in=load, sel=address, a=load1, b=load2, c=load3, d=load4, e=load5, f=load6, g=load7, h=load8);
    
    // Wire up the registers
    Register(in=in, load=load1, out=register1Out);
    Register(in=in, load=load2, out=register2Out);
    Register(in=in, load=load3, out=register3Out);
    Register(in=in, load=load4, out=register4Out);
    Register(in=in, load=load5, out=register5Out);
    Register(in=in, load=load6, out=register6Out);
    Register(in=in, load=load7, out=register7Out);
    Register(in=in, load=load8, out=register8Out);

    // Mux the registers out
    Mux8Way16(a=register1Out, b=register2Out, c=register3Out, d=register4Out, e=register5Out, f=register6Out, g=register7Out, h=register8Out, sel=address, out=out);
}